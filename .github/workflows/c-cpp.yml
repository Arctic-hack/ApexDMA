name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck

     

    # 要设置的 Java 版本。采用整体或 semver Java 版本。请参阅 README 文件中支持的语法示例
    java-version: # 可选
    # `.java-version` 文件的路径。请参阅 README 文件中支持的语法示例
    java-version-file: # 可选
    # Java 发行版。请参阅 README 文件中支持的发行版列表
   
    # 包类型（jdk、jre、jdk+fx、jre+fx）
    java-package: # 可选，默认是jdk
    # 包的架构（默认为动作运行器的架构）
   
    # 压缩后的JDK所在路径
    jdk文件: # 可选
    # 如果您希望操作检查满足版本规范的最新可用版本，请设置此选项
    检查最新: # 可选
    # pom.xml 文件中的 distributionManagement 存储库的 ID。默认是`github`
    server-id: # 可选，默认为 github
    # 用于对 Apache Maven 存储库进行身份验证的用户名的环境变量名称。默认为 $GITHUB_ACTOR
    server-username: # 可选，默认为 GITHUB_ACTOR
    # 用于对 Apache Maven 存储库进行身份验证的密码或令牌的环境变量名称。默认为 $GITHUB_TOKEN
    server-password: # 可选，默认为 GITHUB_TOKEN
    # 将写入 settings.xml 文件的路径。默认为~/.m2。
    设置路径: # 可选
    # 覆盖settings.xml 文件（如果存在）。默认值为“true”。
    overwrite-settings: # 可选，默认为 true
    # 要导入的 GPG 私钥。默认为空字符串。
    gpg-私钥: # 可选
    # GPG 私钥密码的环境变量名称。默认值为 $GPG_PASSPHRASE。
    gpg-passphrase: # 可选
    # 用于缓存依赖项的构建平台的名称。它可以是“maven”、“gradle”或“sbt”。
    缓存: # 可选
    # 依赖文件的路径：pom.xml、build.gradle、build.sbt 等。此选项可以与 `cache` 选项一起使用。如果省略此选项，则该操作将在整个存储库中搜索依赖项文件。此选项支持通配符和文件名列表以缓存多个依赖项。
    缓存依赖路径: # 可选
    # 将作业状态传递给发布作业步骤的解决方法。该变量不适用于手动设置
    job-status: # 可选，默认为 ${{ job.status }}
    # 用于在获取 github.com 上托管的版本清单时进行身份验证的令牌，例如 OpenJDK 的 Microsoft Build。在 github.com 上运行此操作时，默认值就足够了。在 GHES 上运行时，如果遇到速率限制，您可以传递 github.com 的个人访问令牌。
    token: # 可选，默认为 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 如果不需要默认名称“${distribution}_${java-version}”，则为 Maven 工具链 ID 的名称。请参阅高级用法文件中支持的语法示例
    mvn-toolchain-id: # 可选
    # Maven 工具链供应商的名称（如果不需要默认名称“${distribution}”）。请参阅高级用法文件中支持的语法示例
    mvn-toolchain-vendor: # 可选


    # 神器名称
    name: # 可选，默认为artifact
    # 描述要上传内容的文件、目录或通配符模式
   
    # 使用提供的路径找不到文件时所需的行为。


    if-no-files-found: # 可选，默认为 warn
    # 工件将在几天后过期的持续时间。 0 表示使用默认保留。

    # Zlib 应用于工件存档的压缩级别。该值的范围为 0 到 9： - 0：无压缩 - 1：最佳速度 - 6：默认压缩（与 GNU Gzip 相同） - 9：最佳压缩 级别越高，压缩效果越好，但需要更长的时间才能完成。对于不易压缩的大文件，建议使用值 0，以显着加快上传速度。

    压缩级别: # 可选，默认为 6
    # 如果为 true，则在上传新工件之前将删除具有匹配名称的工件。如果为 false，则如果给定名称的工件已存在，则操作将失败。如果工件不存在，则不会失败。

    overwrite: # 可选，默认为 false


    # 要下载的工件的名称。如果未指定，则下载运行的所有工件。
 
    # 目标路径。支持基本波浪线扩展。默认为 $GITHUB_WORKSPACE
    路径: # 可选
    # 与应该下载的工件相匹配的全局模式。如果指定了名称，则忽略。

    # 当多个工件匹配时，这会更改目标目录的行为。如果为 true，下载的工件将位于路径指定的同一目录中。如果为 false，则下载的工件将被提取到指定路径内的单独命名目录中。
    merge-multiple: # 可选，默认为 false
    # 用于通过 GitHub API 进行身份验证的 GitHub 令牌。从不同的存储库或不同的工作流程运行下载工件时，这是必需的。如果未指定，该操作将尝试从当前存储库和当前工作流运行下载工件。
    github-token: # 可选
    # 存储库所有者和存储库名称通过“/”连接在一起。如果指定了 github-token，则这是将从中下载工件的存储库。
    repository: # 可选，默认为 ${{ github.repository }}
    # 上传所需下载工件的工作流程运行的 ID。如果指定了 github-token，则这是将从中下载工件的运行。
    run-id: # 可选，默认为 ${{ github.run_id }}
          

    # 要设置的 Java 版本。采用整体或 semver Java 版本。请参阅 README 文件中支持的语法示例
    java-version: # 可选
    # `.java-version` 文件的路径。请参阅 README 文件中支持的语法示例
    java-version-file: # 可选
    # Java 发行版。请参阅 README 文件中支持的发行版列表
   
    # 包类型（jdk、jre、jdk+fx、jre+fx）
    java-package: # 可选，默认是jdk
    # 包的架构（默认为动作运行器的架构）
    
    # 压缩后的JDK所在路径
    jdk文件: # 可选
    # 如果您希望操作检查满足版本规范的最新可用版本，请设置此选项
    检查最新: # 可选
    # pom.xml 文件中的 distributionManagement 存储库的 ID。默认是`github`
    server-id: # 可选，默认为 github
    # 用于对 Apache Maven 存储库进行身份验证的用户名的环境变量名称。默认为 $GITHUB_ACTOR
    server-username: # 可选，默认为 GITHUB_ACTOR
    # 用于对 Apache Maven 存储库进行身份验证的密码或令牌的环境变量名称。默认为 $GITHUB_TOKEN
    server-password: # 可选，默认为 GITHUB_TOKEN
    # 将写入 settings.xml 文件的路径。默认为~/.m2。
    设置路径: # 可选
    # 覆盖settings.xml 文件（如果存在）。默认值为“true”。
    overwrite-settings: # 可选，默认为 true
    # 要导入的 GPG 私钥。默认为空字符串。
    gpg-私钥: # 可选
    # GPG 私钥密码的环境变量名称。默认值为 $GPG_PASSPHRASE。
    gpg-passphrase: # 可选
    # 用于缓存依赖项的构建平台的名称。它可以是“maven”、“gradle”或“sbt”。
    缓存: # 可选
    # 依赖文件的路径：pom.xml、build.gradle、build.sbt 等。此选项可以与 `cache` 选项一起使用。如果省略此选项，则该操作将在整个存储库中搜索依赖项文件。此选项支持通配符和文件名列表以缓存多个依赖项。
    缓存依赖路径: # 可选
    # 将作业状态传递给发布作业步骤的解决方法。该变量不适用于手动设置
    job-status: # 可选，默认为 ${{ job.status }}
    # 用于在获取 github.com 上托管的版本清单时进行身份验证的令牌，例如 OpenJDK 的 Microsoft Build。在 github.com 上运行此操作时，默认值就足够了。在 GHES 上运行时，如果遇到速率限制，您可以传递 github.com 的个人访问令牌。
    token: # 可选，默认为 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 如果不需要默认名称“${distribution}_${java-version}”，则为 Maven 工具链 ID 的名称。请参阅高级用法文件中支持的语法示例
    mvn-toolchain-id: # 可选
    # Maven 工具链供应商的名称（如果不需要默认名称“${distribution}”）。请参阅高级用法文件中支持的语法示例
    mvn-toolchain-vendor: # 可选
              
